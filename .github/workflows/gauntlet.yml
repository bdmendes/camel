name: gauntlet

on:
  - pull_request

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  gauntlet:
    if: false # FIXME: Re-enable once v2 is ready to play.
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    strategy:
      matrix:
        target: [upstream, release]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up script permissions
        run: chmod +x ./scripts/gauntlet.sh

      - name: Set up reference branch
        run: |
          if [ "${{ matrix.target }}" == "upstream" ]; then
            git fetch origin master:master
          else
            git fetch origin $(git describe --tags --abbrev=0)
          fi

      - name: Run script and collect results
        env:
          CURRENT_BRANCH: ${{ github.head_ref }}
        run: |
          if [ "${{ matrix.target }}" == "upstream" ]; then
            ./scripts/gauntlet.sh || echo "GAUNTLET_FAILED=1" >> $GITHUB_ENV
          else
            ./scripts/gauntlet.sh $(git describe --tags --abbrev=0) || echo "GAUNTLET_FAILED=1" >> $GITHUB_ENV
          fi

      - uses: mshick/add-pr-comment@v2
        with:
          message-path: fast-chess/message.txt
          message-id: ${{ matrix.target }}

      - name: Fail if gauntlet failed
        run: |
          if [ -n "$GAUNTLET_FAILED" ]; then
            exit 1
          fi
